name: Provision and Scan Workflow

on:
  push:
    branches: [ main ]

jobs:
  provision:
    name: Provision Infrastructure
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./Terra

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./Terra

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./Terra

      - name: Save Terraform Outputs
        run: |
            terraform output -json > tf_outputs.json

    #   - name: Upload Terraform Outputs
    #     uses: actions/upload-artifact@v3
    #     with:
    #         name: tf_outputs
    #         path: tf_outputs.json

  scan:
    name: SonarQube Scan
    runs-on: self-hosted
    needs: provision
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Add SonarScanner to PATH
        run: |
          $env:PATH += ";C:\SonarScanner\sonar-scanner-5.0.1.3006-windows\bin"

    #   - name: Download Terraform Outputs
    #     uses: actions/download-artifact@v3
    #     with:
    #       name: tf_outputs
    #       path: tf_outputs.json

      - name: Load Terraform Outputs
        id: tf
        run: |
            $outputs = Get-Content tf_outputs.json | ConvertFrom-Json
            echo "SONAR_URL=$($outputs.sonarqube_url.value)" >> $env:GITHUB_ENV
            echo "SONAR_TOKEN=$($outputs.sonarqube_token.value)" >> $env:GITHUB_ENV
            echo "NODE_PORT=$($outputs.sonarqube_node_port.value)" >> $env:GITHUB_ENV
            
      - name: Run SonarQube Scan
        run: |
          sonar-scanner ^
            -Dsonar.projectKey=my-project ^
            -Dsonar.sources=. ^
            -Dsonar.host.url=$env:SONAR_URL ^
            -Dsonar.login=$env:SONAR_TOKEN
            -Dsonar.host.url=http://localhost:$env:NODE_PORT ^
            
