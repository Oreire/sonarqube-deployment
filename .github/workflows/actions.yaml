name: Provision and Scan Workflow

on:
  push:
    branches: [ main ]

jobs:
  provision:
    name: Provision Infrastructure
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Set up Kubectl
        run: |
          echo "KUBE_CONFIG_PATH=$HOME/.kube/config" >> $env:GITHUB_ENV
          echo "KUBE_VERSION=latest" >> $env:GITHUB_ENV
          kubectl config use-context docker-desktop

      - name: Terraform Init
        run: terraform init
        working-directory: ./Terra

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./Terra

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./Terra

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./Terra

      - name: Save Terraform Outputs
        run: terraform output -json > tf_outputs.json
        working-directory: ./Terra
    
      - name: Upload Terraform Outputs
        uses: actions/upload-artifact@v4.3.1
        with:
            name: tf-outputs
            path: ./Terra/tf_outputs.json
            
  scan:
    name: SonarQube Scan
    runs-on: self-hosted
    needs: provision
    if: success()  # Only run if 'provision' job succeeds

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Add SonarScanner to PATH
        run: |
          $env:PATH += ";C:\SonarScanner\sonar-scanner-5.0.1.3006-windows\bin"
    
      - name: Download Terraform Outputs
        uses: actions/download-artifact@v4
        with:
          name: tf-outputs
          path: ./tf-data

      - name: Load Terraform Outputs
        id: tf
        run: |
          $outputs = Get-Content ./tf-data/tf_outputs.json | ConvertFrom-Json
          echo "SONAR_URL=$($outputs.sonarqube_url.value)" >> $env:GITHUB_ENV
          echo "SONAR_TOKEN=$($outputs.sonarqube_token.value)" >> $env:GITHUB_ENV
          echo "NODE_PORT=$($outputs.sonarqube_node_port.value)" >> $env:GITHUB_ENV

     
      - name: Run SonarQube Scan
        run: |
          sonar-scanner ^
            -Dsonar.projectKey=my-project ^
            -Dsonar.sources=. ^
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} ^
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

